#!/usr/bin/env python2.3

import os, sys
import plasTeX
from plasTeX.TeX import TeX
from plasTeX.TALUtils import *
from plasTeX.Tokenizer import CC_EXPANDED

#sys.path.insert(0, os.path.join(os.path.dirname(plasTeX.__file__), 'packages'))

print >>sys.stderr, 'plasTeX version 1.0'
file = sys.argv[1]

#s = TeX(open(file,'r'))
#for item in s:
#    print item.code, item
#print s.source(s)
#sys.exit()

# Parse document
#TeX.disableLogging()
s = TeX(open(file,'r'))
#print [(x, x.depth) for x in s]
document = s.parse()
#for i, item in enumerate(s.sourcetokens):
#    print i, repr(item)
#print ''.join([repr(x) for x in document])
#output = []
#for item in document:
#    if item.code == 100:
#        print repr(item), id(item)
#    else:
#        print item,
document = [x for x in document if x.code == CC_EXPANDED and x.nodeName == 'document'].pop()
print document.toXML()
#print s.source(document)
sys.exit()

basename = os.path.splitext(os.path.basename(file))[0]

open(basename+'.xml', 'w').write(document.toXML())

# Apply renderer
from plasTeX.renderers.xhtml import xhtml as renderer
s.context.applyRenderer(renderer)

# Render output
renderer.imager.addtopreamble(document.preamble)
print document.render(file=basename+'.html')
renderer.imager.close()

# Expanded source
s.persistent.seek(0)
open(basename+'.source','w').write(s.persistent.read())
